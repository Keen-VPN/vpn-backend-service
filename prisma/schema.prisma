generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String              @id @default(uuid())
  firebaseUid        String?             @unique @map("firebase_uid")
  appleUserId        String?             @unique @map("apple_user_id")
  googleUserId       String?             @unique @map("google_user_id")
  email              String              @unique
  displayName        String?             @map("display_name")
  provider           String              @default("google")
  emailVerified      Boolean             @default(false) @map("email_verified")
  createdAt          DateTime            @default(now()) @map("created_at")
  updatedAt          DateTime            @updatedAt @map("updated_at")
  stripeCustomerId   String?             @unique @map("stripe_customer_id")
  connectionSessions ConnectionSession[]
  subscriptions      Subscription[]

  @@map("users")
}

model Subscription {
  id                         String    @id @default(uuid())
  userId                     String    @map("user_id")
  stripeCustomerId           String?   @map("stripe_customer_id")
  stripeSubscriptionId       String?   @unique @map("stripe_subscription_id")
  status                     String    @default("inactive")
  planId                     String?   @map("plan_id")
  planName                   String?   @map("plan_name")
  priceAmount                Decimal?  @map("price_amount") @db.Decimal(10, 2)
  priceCurrency              String?   @default("USD") @map("price_currency")
  billingPeriod              String?   @map("billing_period")
  currentPeriodStart         DateTime? @map("current_period_start")
  currentPeriodEnd           DateTime? @map("current_period_end")
  cancelAtPeriodEnd          Boolean   @default(false) @map("cancel_at_period_end")
  cancelledAt                DateTime? @map("cancelled_at")
  createdAt                  DateTime  @default(now()) @map("created_at")
  updatedAt                  DateTime  @updatedAt @map("updated_at")
  appleEnvironment           String?   @map("apple_environment")
  appleOriginalTransactionId String?   @map("apple_original_transaction_id")
  appleProductId             String?   @map("apple_product_id")
  appleTransactionId         String?   @unique @map("apple_transaction_id")
  subscriptionType           String    @default("stripe") @map("subscription_type")
  user                       User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([subscriptionType])
  @@index([stripeCustomerId])
  @@index([appleTransactionId])
  @@index([appleOriginalTransactionId])
  @@index([status])
  @@index([currentPeriodEnd])
  @@map("subscriptions")
}

model ConnectionSession {
  id               String    @id @default(uuid())
  userId           String    @map("user_id")
  sessionStart     DateTime  @map("session_start")
  sessionEnd       DateTime? @map("session_end")
  durationSeconds  Int       @default(0) @map("duration_seconds")
  serverLocation   String?   @map("server_location")
  serverAddress    String?   @map("server_address")
  platform         String
  appVersion       String?   @map("app_version")
  bytesTransferred BigInt    @default(0) @map("bytes_transferred")
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")
  isAnonymized     Boolean   @default(false) @map("is_anonymized")
  subscriptionTier String?   @map("subscription_tier")
  user             User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([sessionStart])
  @@index([sessionEnd])
  @@index([durationSeconds])
  @@index([platform])
  @@index([serverLocation])
  @@index([createdAt])
  @@index([isAnonymized])
  @@index([subscriptionTier])
  @@map("connection_sessions")
}

model SessionAggregate {
  id               String   @id @default(uuid())
  aggregationDate  DateTime @map("aggregation_date")
  platform         String
  serverLocation   String   @map("server_location")
  subscriptionTier String?  @map("subscription_tier")
  totalSessions    Int      @map("total_sessions")
  totalDuration    Int      @map("total_duration")
  totalBytes       BigInt   @map("total_bytes")
  avgDuration      Int      @map("avg_duration")
  avgBytes         BigInt   @map("avg_bytes")
  uniqueUsers      Int      @map("unique_users")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  @@unique([aggregationDate, platform, serverLocation, subscriptionTier])
  @@index([aggregationDate])
  @@index([platform])
  @@index([serverLocation])
  @@index([subscriptionTier])
  @@map("session_aggregates")
}
